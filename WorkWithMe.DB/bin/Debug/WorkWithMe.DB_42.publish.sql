/*
Deployment script for WorkWithMe

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WorkWithMe"
:setvar DefaultFilePrefix "WorkWithMe"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Starting rebuilding table [dbo].[tblPost]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_tblPost] (
    [Id]             UNIQUEIDENTIFIER NOT NULL,
    [OwnerUserId]    UNIQUEIDENTIFIER NOT NULL,
    [TargetGroupId]  UNIQUEIDENTIFIER DEFAULT NULL NULL,
    [ReplyPostId]    UNIQUEIDENTIFIER DEFAULT NULL NULL,
    [Title]          NVARCHAR (50)    NOT NULL,
    [Content]        NVARCHAR (MAX)   NOT NULL,
    [IsSticky]       BIT              NOT NULL,
    [IsDeleted]      BIT              NOT NULL,
    [TimeStamp]      DATETIME         NOT NULL,
    [EventTimeStamp] DATETIME         NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[tblPost])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_tblPost] ([Id], [OwnerUserId], [TargetGroupId], [Title], [Content], [IsSticky], [IsDeleted], [TimeStamp], [EventTimeStamp])
        SELECT   [Id],
                 [OwnerUserId],
                 [TargetGroupId],
                 [Title],
                 [Content],
                 [IsSticky],
                 [IsDeleted],
                 [TimeStamp],
                 [EventTimeStamp]
        FROM     [dbo].[tblPost]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[tblPost];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_tblPost]', N'tblPost';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[spCreatePost]...';


GO
ALTER PROCEDURE [dbo].[spCreatePost]
	@PosterId uniqueidentifier,
	@TargetGroupId uniqueidentifier null,
	@ReplyPostId uniqueidentifier null,
	@Title nvarchar(50),
	@Content nvarchar(MAX),
	@IsSticky bit,
	@EventTimeStamp datetime null
AS
	BEGIN
		INSERT INTO [dbo].[tblPost] (Id, OwnerUserId, TargetGroupId, ReplyPostId, Title, Content, IsSticky, 
									 IsDeleted, TimeStamp, EventTimeStamp) values
		(NewId(),@PosterId,@TargetGroupId,@ReplyPostId,@Title,@Content,@IsSticky,0,GETDATE(),@EventTimeStamp);
	END
RETURN @@ROWCOUNT;
GO
PRINT N'Refreshing [dbo].[spGetPostsForUser]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spGetPostsForUser]';


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
delete from tblUser WHERE Username = 'Test'; 

declare @response nvarchar(100);

exec spCreateUser @Username = 'Test',
 @Password = 'Test', @FirstName = 'Testy', 
 @MiddleInitial = 'T', 
 @Lastname = 'McTesterson',
 @Zip = 54914,
 @City = 'Appleton',
 @State = 'WI',
 @Address = '1234 Street Rd',
 @IsAddressPrivate = 0,
 @EmailAddress = 'test@test.test',
 @Response = @response output;

 PRINT @response;

 delete from tblInviteStatus;

 insert into tblInviteStatus (Id, Description)
 values 
   (0,'Invited'),
   (1,'Declined'),
   (2,'Accepted'),
   (3,'Blocked');

 delete from tblUserContact where OwnerUserId = '00000000-0000-0000-0000-000000000000';

 insert into tblUserContact (Id, OwnerUserId, TargetUserId, InviteStatusId)
 values (NewID(), '00000000-0000-0000-0000-000000000000','00000000-0000-0000-0000-000000000001',2);

 delete from tblPost where OwnerUserId = '00000000-0000-0000-0000-000000000000';
 delete from tblPost where OwnerUserId = '00000000-0000-0000-0000-000000000001';

 insert into tblPost (Id, OwnerUserId, Title, Content, IsSticky, IsDeleted, TimeStamp, EventTimeStamp)
 values
 (NewId(),'00000000-0000-0000-0000-000000000000','Test Post from User 0','Stuff A',0,0, GETDATE(),null),
 (NewId(),'00000000-0000-0000-0000-000000000001','Test Post from User 1','Stuff B',0,0, GETDATE(),null);
GO

GO
PRINT N'Update complete.';


GO
