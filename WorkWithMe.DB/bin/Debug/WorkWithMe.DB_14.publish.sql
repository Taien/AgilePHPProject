/*
Deployment script for WorkWithMe

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WorkWithMe"
:setvar DefaultFilePrefix "WorkWithMe"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Rename refactoring operation with key 3f3ee060-748a-43be-ae14-8f107c3c4961 is skipped, element [dbo].[tblUserContact].[Own] (SqlSimpleColumn) will not be renamed to OwnerUserId';


GO
PRINT N'Rename refactoring operation with key c210c68e-a702-4852-bfa8-c46400301c64 is skipped, element [dbo].[tblUserContact].[InviteStatus] (SqlSimpleColumn) will not be renamed to InviteStatusId';


GO
PRINT N'The following operation was generated from a refactoring log file ab3b76b7-b2c6-482d-a7d8-6ab3c6d80008';

PRINT N'Rename [dbo].[tblGroupInvite].[InviteStatus] to InviteStatusId';


GO
EXECUTE sp_rename @objname = N'[dbo].[tblGroupInvite].[InviteStatus]', @newname = N'InviteStatusId', @objtype = N'COLUMN';


GO
PRINT N'Creating [dbo].[tblUserContact]...';


GO
CREATE TABLE [dbo].[tblUserContact] (
    [Id]             INT              NOT NULL,
    [OwnerUserId]    UNIQUEIDENTIFIER NOT NULL,
    [TargetUserId]   UNIQUEIDENTIFIER NOT NULL,
    [InviteStatusId] INT              NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
delete from tblUser WHERE Username = 'Test'; 

declare @response nvarchar(100);

exec spCreateUser @Username = 'Test',
 @Password = 'Test', @FirstName = 'Testy', 
 @MiddleInitial = 'T', 
 @Lastname = 'McTesterson',
 @Zip = 54914,
 @City = 'Appleton',
 @State = 'WI',
 @Address = '1234 Street Rd',
 @IsAddressPrivate = 0,
 @Response = @response output;

 PRINT @response;

 delete from tblInviteStatus;

 insert into tblInviteStatus (Id, Description)
 values 
   (0,'Invited'),
   (1,'Declined'),
   (2,'Accepted'),
   (3,'Blocked');
GO

GO
PRINT N'Update complete.';


GO
