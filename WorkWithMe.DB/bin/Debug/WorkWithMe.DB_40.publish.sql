/*
Deployment script for WorkWithMe

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "WorkWithMe"
:setvar DefaultFilePrefix "WorkWithMe"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
PRINT N'Altering [dbo].[spSearchUser]...';


GO
ALTER PROCEDURE [dbo].[spSearchUser]
	@SearchString nvarchar(255),
	@OriginUserId uniqueidentifier
AS
	select Id, Username, FirstName, MiddleInitial, LastName, EmailAddress
	from tblUser
	where (Username like '%' + @SearchString + '%' 
	or EmailAddress like '%' + @SearchString + '%') --this line needs another OR for the full name, which I'll have to compute
	and Id != @OriginUserId
	and Id not in --this checks if this person A) is already a contact, B) is already invited, or C) blocked the user requesting contact 
		(select TargetUserId from [dbo].[tblUserContact] where OwnerUserId = @OriginUserId and InviteStatusId != 1 --invite status of 1 means declined, which allows them to request again
		 union
		 select OwnerUserId from [dbo].[tblUserContact] where TargetUserId = @OriginUserId and InviteStatusId != 1)
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
delete from tblUser WHERE Username = 'Test'; 

declare @response nvarchar(100);

exec spCreateUser @Username = 'Test',
 @Password = 'Test', @FirstName = 'Testy', 
 @MiddleInitial = 'T', 
 @Lastname = 'McTesterson',
 @Zip = 54914,
 @City = 'Appleton',
 @State = 'WI',
 @Address = '1234 Street Rd',
 @IsAddressPrivate = 0,
 @EmailAddress = 'test@test.test',
 @Response = @response output;

 PRINT @response;

 delete from tblInviteStatus;

 insert into tblInviteStatus (Id, Description)
 values 
   (0,'Invited'),
   (1,'Declined'),
   (2,'Accepted'),
   (3,'Blocked');

 delete from tblUserContact where OwnerUserId = '00000000-0000-0000-0000-000000000000';

 insert into tblUserContact (Id, OwnerUserId, TargetUserId, InviteStatusId)
 values (NewID(), '00000000-0000-0000-0000-000000000000','00000000-0000-0000-0000-000000000001',2);

 delete from tblPost where OwnerUserId = '00000000-0000-0000-0000-000000000000';
 delete from tblPost where OwnerUserId = '00000000-0000-0000-0000-000000000001';

 insert into tblPost (Id, OwnerUserId, Title, Content, IsSticky, IsDeleted, TimeStamp, EventTimeStamp)
 values
 (NewId(),'00000000-0000-0000-0000-000000000000','Test Post from User 0','Stuff A',0,0, GETDATE(),null),
 (NewId(),'00000000-0000-0000-0000-000000000001','Test Post from User 1','Stuff B',0,0, GETDATE(),null);
GO

GO
PRINT N'Update complete.';


GO
